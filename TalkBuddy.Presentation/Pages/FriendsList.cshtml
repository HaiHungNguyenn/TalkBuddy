@page
@using TalkBuddy.Domain.Entities;
@using TalkBuddy.Presentation.Components;
@model TalkBuddy.Presentation.Pages.FriendsListModel
@{
    var friendsList = TempData["friendsList"] as IEnumerable<Client> ?? new List<Client>();
    TempData["showPopup"] = false;
}

<link rel="stylesheet" href="~/css/header.css"/>

<style>
    .online-status {
        border: 5px solid #00e4e3;
        border-radius: 50%;
    }
    
    .offline-status {
        border: 5px solid grey;
        border-radius: 50%;
    }
</style>

<section class="h-100 w-100 d-flex flex-column justify-content-start" style="background-color: #e4e7f5;">
    <component type="typeof(Header)" render-mode="Static"/>
    <div class="d-flex justify-content-center align-items-start h-100" style="background-color: #e4e7f5;">
        <div class="d-flex flex-column justify-content-center align-items-center h-100" style="width: 30%">
            <h2 class="text-center">Friends list:</h2>

            <ul class="navbar-nav flex-grow-1 flex-column w-100 gap-1" style="max-height: 650px; overflow: hidden;">
                @foreach (var friend in friendsList)
                {
                    <li class="nav-item p-2 align-items-center" style="cursor: pointer; transition: background-color 0.3s ease-out; display: grid; grid-template-columns: repeat(3, 1fr)">
                        <span>@friend.Name</span>
                        <div class="d-flex justify-content-start align-items-center gap-1" data-friend-id="@friend.Id">

                            <div class="offline-status"></div>
                            <span class="online-status-text">offline</span>
                        </div>
                        <div class="d-flex justify-content-end align-items-center gap-2">
                            <form method="post" asp-route-friendId="@friend.Id">
                                <button id="submit-button" type="submit" class="btn btn-primary">
                                    <i class="fa-solid fa-message"></i>
                                </button>
                            </form>
                            <form method="post" asp-page-handler="RemoveFriend" asp-route-friendId="@friend.Id">
                                <button type="submit" id="remove-friend-button" style="display: none"></button>
                                <button type="button" class="btn btn-primary" onclick="openPopup()">
                                    <i class="fa-solid fa-xmark"></i>
                                </button>
                            </form>
                            
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</section>

<div id="popup-container" style="display: none">
    <component type="typeof(ConfirmationPopup)" render-mode="Static"
        param-message='"Are you sure to delete this user from your friends list?"' />
</div>

@section scripts {
    <script>
        function openPopup() {
            document.getElementById("popup-container").style.display = "block";
        }

        function hidePopup() {
            document.getElementById("popup-container").style.display = "none";
        }

        function confirmPopup() {
            console.log('Yes is clicked');
            document.getElementById("remove-friend-button").click();
        }
    </script>
    <script>
        presenceConnection.on("GetOnlineFriends", function (friendIdList) {
            
            if (friendIdList.length > 0) {
                friendIdList.forEach(function (friendId) {
                    var onlineStatusElement = document.querySelector(`[data-friend-id="${friendId}"] .offline-status`);
                    if (onlineStatusElement) {
                        onlineStatusElement.classList.remove("offline-status");
                        onlineStatusElement.classList.add("online-status");
                    }
                    var onlineStatusText = document.querySelector(`[data-friend-id="${friendId}"] .online-status-text`);
                    if (onlineStatusText) {
                        onlineStatusText.textContent = "online";
                    }
                });
            }
        });

      
        presenceConnection.on("UpdateOnlineStatus", function (userId, isOnline) {
            console.log(userId, isOnline);
            if(isOnline){
                var onlineStatusElement = document.querySelector(`[data-friend-id="${userId}"] .offline-status`);
            }else{
                var onlineStatusElement = document.querySelector(`[data-friend-id="${userId}"] .online-status`);
            }
            
            if (onlineStatusElement) {
                if(isOnline){
                    onlineStatusElement.classList.remove("offline-status");
                    onlineStatusElement.classList.add("online-status");
                } else {
                    onlineStatusElement.classList.remove("online-status");
                    onlineStatusElement.classList.add("offline-status");
                }                
            }
            var onlineStatusText = document.querySelector(`[data-friend-id="${userId}"] .online-status-text`);
            if (onlineStatusText) {
                onlineStatusText.textContent = isOnline ? "online" : "offline";
            }
        });

    </script>
}


