@page
@model TalkBuddy.Presentation.Pages.ChatPage
@{

}

@*<style>
    .search-icon {
        border: none;
    }

    .search-btn {
        border: none;
        background: none;
    }

    .search-form {
        background-color: #25386d;
        padding: 0.5rem;
        border-radius: 1.25rem;
    }

    .search-form > input {
        border: none;
        background-color: transparent;
        color: whitesmoke;
        text-indent: 0.5rem;
        outline: none;
    }

    .fa-bell {
        font-size: 1.5rem;
    }

    .chat-container {
        background-color: #e4e7f5;
        padding: 2rem 1rem;
    }

    .chat-layout {
        height: 100%;
        display: grid;
        grid-template-columns: 2fr 8fr;
        gap: 1rem;
    }

    .left-container {
        display: flex;
        flex-direction: column;
        justify-content: start;
        align-items: center;
        padding: 1rem 0.5rem;
        gap: 2rem;
        border-radius: 0.25rem;
        background-color: white;
    }

    .search-chatbox-form {
        background-color: white;
        padding: 0.75rem;
        border-radius: 0.25rem;
        width: 100%;
        display: flex;
        justify-content: space-between;
        border: solid 2px grey;
    }

    .search-chatbox-form > input {
        border: none;
        background-color: transparent;
        color: black;
        text-indent: 0.5rem;
        outline: none;
        width: 100%;
    }

    .avatar {
        width: 80px;
        height: 80px;
        border-radius: 0.5rem;
    }

    ul, li {
        list-style: none;
    }

    #chatBoxtList {
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        padding-left: 0!important;
    }

    #chatBoxtList > li {
        width: 100%;
        display: flex;
        justify-content: start;
        align-items: center;
        gap: 1rem;
        padding: 0.75rem;
        cursor: pointer;
    }

    #chatBoxtList > li:hover {
        background-color: #7f5ee5;
        border-radius: 0.5rem;
        transition: background-color 0.5s ease-out;
    }

    .chat-window {
        border-radius: 0.25rem;
        background-color: white;
        padding: 1rem;
        display: grid;
        grid-template-rows: auto 1fr auto;
        gap: 1rem;
    }

    .chat-header {
        width: 100%;
        display: flex;
        justify-content: start;
        align-items: center;
        gap: 1rem;
    }

    .chat-header .avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }

    .chat-footer {
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: solid 1px #80808080;
        border-radius: 0.25rem;
        height: 4rem;
    }

    .chat-footer button {
        border: none;
        width: 4rem;
        height: 4rem;
        font-size: 1.5rem;
        border-left: solid 1px #80808080;
        background: transparent;
    }

    #messageInput {
        outline: none;
        border: none;
        width: 100%;
        text-indent: 1rem;
    }

    #messages {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        max-height: 500px;
        overflow-y: scroll;
    }

    #messages > li {
        background-color: #00e4e3;
        color: white;
        width: fit-content;
        padding: 0.15rem 0.25rem;
        border-radius: 0.2rem;
        font-weight: 500;
        opacity: 0.9;
        position: relative;
    }

    #messages > li:before {
        content: "";
        width: 0px;
        height: 0px;
        position: absolute;
        border-right: 10px solid #00e4e3;
        border-left: 10px solid transparent;
        border-bottom: 10px solid #00e4e3;
        border-top: 10px solid transparent;
        left: -7px;
        bottom: 0;
        z-index: -1;
    }

</style>*@

<link rel="stylesheet" href="~/ChatPage.cshtml.css" />

<section class="h-100 d-flex flex-column justify-content-start align-items-center">
    <div class="w-100 d-flex justify-content-between align-items-center py-3 px-5" style="background-color: #5e73e2;">
        <form method="post" class="search-form">
            <input type="text" placeholder="Type to search..." />
            <button type="submit" class="search-btn">
                <i class="fa-solid fa-magnifying-glass search-icon"></i>
            </button>
        </form>
        <div class="d-flex justify-content-between align-items-center gap-4">
            <i class="fa-solid fa-bell add-icon text-white"></i>
            <img class="rounded-circle" style="cursor: pointer;" width="40" height="40" src="~/default-avatar.png" />
        </div>
    </div>
    <div class="w-100 h-100 chat-container">
        <div class="chat-layout">
            <div class="left-container">
                <form method="post" class="search-chatbox-form">
                    <input class="rounded-3" type="text" placeholder="Search for conversation..." />
                    <button type="submit" class="search-btn">
                        <i class="fa-solid fa-magnifying-glass search-icon"></i>
                    </button>
                </form>
                <div class="w-100">
                    <ul id="chatBoxtList">
                        <li>
                            <a>
                                <img alt="Vector2670" class="avatar"
                                     src="https://a.storyblok.com/f/191576/1200x800/faa88c639f/round_profil_picture_before_.webp" />
                            </a>
                            <span class="fs-5 fw-semibold">avi_chovatiya</span>
                        </li>

                        <li>
                            <div>
                                <img alt="Vector2670" class="avatar"
                                     src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQIiXek5XSm6IQi4L6SQVvFZg6K3RzFRLCWNg" />
                            </div>

                            <span class="fs-5 fw-semibold">kishu_patel68</span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="chat-window">
                <div class="chat-header">
                    <div class="avatar-of-chat">
                        <img src="https://a.storyblok.com/f/191576/1200x800/faa88c639f/round_profil_picture_before_.webp" class="avatar"
                                alt="Vector2858" />
                    </div>
                    <span class="fw-semibold" style="font-size: 2rem;">avi_chovatiya67</span>
                </div>

                <ul id="messages">
                    <li>Hi</li>
                </ul>
                <div class="chat-footer">
                    <input placeholder="Type your message here" id="messageInput" />
                    <div id="sendButton">
                        <button>
                            <i class="fa-solid fa-paper-plane"></i>
                        </button>
                    </div>
                </div>

            </div>
        </div>


       @* <div class="default-chat-box-container hidden">
            <img alt="robot12744"
                    src="public/external/robot12744-v1y-200h.png" />
            <span>
                <span>Welcome,</span>
                <span>
                    <span>Richa_denials!</span>
                    <br />
                    <span></span>
                </span>
                <span>please select a chat to start messaging.</span>
            </span>
        </div>*@
    </div>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.0/signalr.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

    connection.on("ReceiveMessage", function (user, message) {
        var li = document.createElement("li");
        li.textContent = message;
        li.classList.add("screen8-group3");
        document.getElementById("messages").appendChild(li);
    });

    connection.start().then(function () {
        console.log("SignalR Connected");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var chatBoxId = "User"; // replace by chat box Id
        var message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", chatBoxId, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

    connection.on("InitializeChat", function (chatBoxes) {
        // Handle received messages
        console.log(chatBoxes)
        chatBoxes.forEach(function (chatBox) {
            var li = document.createElement("li");
            console.log(chatBox)
            console.log("hi")
            // Create the outer div with class 'screen7-frame14' or 'screen7-frame10' based on some condition
            var divOuter = document.createElement("div");
            divOuter.className = "screen7-frame14"

            // Create the inner div with class 'screen7-avatar' or 'screen7-frame16' based on some condition
            var divInner = document.createElement("div");
            divInner.className = "screen7-avatar"

            // Create the image element
            var img = document.createElement("img");
            img.alt = "Vector2670";
            img.src = chatBox.imageUrl;
            img.className = "screen7-vector20";

            // Create the span element for the text
            var span = document.createElement("span");
            span.className = "screen7-text"
            span.innerHTML = "<span>" + chatBox.ChatBoxName + "</span>";

            // Append the elements to construct the HTML structure
            divOuter.appendChild(divInner);
            divInner.appendChild(img);
            li.appendChild(divOuter);
            li.appendChild(span);
            li.onclick = GetMessageFromChatBox()
            li.id = chatBox.Id;
            // Append the list item to the chat box list
            chatBoxList.appendChild(li);
        });
    });

    // Function to display messages on the UI
    function displayChatBoxs(chatBoxes) {
        var chatBoxList = document.getElementById("chatBoxList");
        chatBoxList.innerHTML = ""; // Clear previous chat boxes
        console.log(chatBoxes)
        chatBoxes.forEach(c => console.log(c));

        chatBoxes.forEach(function (chatBox) {
            var li = document.createElement("li");
            console.log(chatBox)
            console.log("hi")
            // Create the outer div with class 'screen7-frame14' or 'screen7-frame10' based on some condition
            var divOuter = document.createElement("div");
            divOuter.className = "screen7-frame14"

            // Create the inner div with class 'screen7-avatar' or 'screen7-frame16' based on some condition
            var divInner = document.createElement("div");
            divInner.className = "screen7-avatar"

            // Create the image element
            var img = document.createElement("img");
            img.alt = "Vector2670";
            img.src = chatBox.imageUrl;
            img.className = "screen7-vector20";

            // Create the span element for the text
            var span = document.createElement("span");
            span.className = "screen7-text"
            span.innerHTML = "<span>" + chatBox.ChatBoxName + "</span>";

            // Append the elements to construct the HTML structure
            divOuter.appendChild(divInner);
            divInner.appendChild(img);
            li.appendChild(divOuter);
            li.appendChild(span);
            li.onclick = GetMessageFromChatBox()
            li.id = chatBox.Id;
            // Append the list item to the chat box list
            chatBoxList.appendChild(li);

        });
    }

    function requestMessagesForChatBox(chatBoxId) {
        connection.invoke("GetMessages", chatBoxId).then(function (messages) {
            // Handle received messages
            displayMessages(messages);
        }).catch(function (err) {
            return console.error(err.toString());
        });
    }

    // Function to handle click event on a chat box item
    function handleChatBoxClick(event) {
        // Extract chatBoxId from the clicked element
        var chatBoxId = event.currentTarget.dataset.chatBox.Id;

        // Request messages for the clicked chat box
        requestMessagesForChatBox(chatBoxId);
    }

    // Example usage: Attach click event handler to each chat box item
    var chatBoxItems = document.querySelectorAll("#chatBoxtList > li");
    chatBoxItems.forEach(function (item) {
        item.addEventListener("click", handleChatBoxClick);
    });

    // Function to display messages on the UI
    function displayMessages(messages) {
        var messagesList = document.getElementById("messages");
        messagesList.innerHTML = ""; // Clear previous messages

        messages.forEach(function (messageText) {
            // Create a new list item for each message
            var li = document.createElement("li");

            // Create a div for the message content
            var div = document.createElement("div");
            div.className = "screen8-group3";

            // Create a span for the message text
            var span = document.createElement("span");
            span.className = "screen8-text14";
            span.textContent = messageText;

            // Append the span to the div
            div.appendChild(span);

            // Append the div to the list item
            li.appendChild(div);

            // Append the list item to the messages list
            messagesList.appendChild(li);
        });
    }

</script>

