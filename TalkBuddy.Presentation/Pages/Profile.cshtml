@page
@using TalkBuddy.Domain.Entities
@model Profile

<link rel="stylesheet" href="~/Profile.cshtml.css" />
<div class="profile-container p-4">
    <div class="row image-row">
        <img src="@Model.ProfilePicture" class="profile-picture rounded-circle" alt="Profile Picture"/>
        <button class="switch-input-btn">
            <img class="switch-svg" src="img/chevron-down.svg"/>
        </button>
    </div>
    <div class="row edit-profile-row form-bg-color h-50vh justify-content-center rounded-3">
        <div id="form-card" class="card-body rounded-3" style="background-color: #00e4e3;">
            <h5 class="card-title">Profile</h5>
            <form id="profile-form" method="post">
                <input type="hidden" name="CurrentUser.Id" value="@Model.CurrentUser.Id" />
                <input type="hidden" name="CurrentUser.ProfilePicture" value="@Model.CurrentUser.ProfilePicture" />
                <input type="hidden" name="CurrentUser.Password" value="@Model.CurrentUser.Password" />
                <div class="form-group mb-3">
                    <label for="floatingInput">Name</label>
                    <p class="input-after">@Model.CurrentUser.Name</p>
                    <input name="CurrentUser.Name" type="text" class="form-control input-round disappear" id="floatingInput" placeholder="Name" 
                        value="@Model.CurrentUser.Name"> 
                    <span asp-validation-for="@Model.CurrentUser.Name" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label for="floatingInput">Email address</label>
                    <p class="input-after">@Model.CurrentUser.Email</p>
                    <input name="CurrentUser.Email" type="email" class="form-control input-round disappear" id="floatingInput" placeholder="name@example.com"
                        value="@Model.CurrentUser.Email">
                    <span asp-validation-for="@Model.CurrentUser.Email" class="text-danger"></span>
                </div>
                
                <div class="form-group mb-3">
                    <label for="floatingPassword">Date of birth</label>
                    <p class="input-after">@Model.CurrentUser.DateOfBirth</p>
                    <input name="CurrentUser.DateOfBirth" type="datetime-local" class="form-control input-round disappear" id="floatingPassword" value="@Model.CurrentUser.DateOfBirth">
                    <span asp-validation-for="@Model.CurrentUser.DateOfBirth" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label for="floatingPassword">Gender</label>
                    <p class="input-after">@Model.CurrentUser.Gender</p>
                    <input name="CurrentUser.Gender" type="text" class="form-control input-round disappear" id="floatingPassword" placeholder="Gender"
                        value="@Model.CurrentUser.Gender">
                    <span asp-validation-for="@Model.CurrentUser.Gender" class="text-danger"></span>
                </div>
                

                @foreach (var modelState in ViewData.ModelState.Values)
                {
                foreach (var error in modelState.Errors)
                {
                <div>@error.ErrorMessage</div>
                }
                }

            </form>
        </div>
    </div>
</div>

<script>
    //set date input
    let dateTime = document.querySelector("input[type=datetime-local]");
    var inputDate = new Date("@Model.CurrentUser.DateOfBirth"+" UTC");
    var outputStr = inputDate.toISOString().slice(0, 16);
    dateTime.value = outputStr;

    let switchModeBtn = document.getElementsByClassName("switch-input-btn")[0];
       switchModeBtn.addEventListener("click", () => {
        let editProfileRow = document.getElementsByClassName("edit-profile-row")[0];
        let formCard = document.getElementById("form-card");
        let inputs = document.getElementsByClassName("input-round");
        let details = document.getElementsByClassName("input-after");

        formCard.classList.toggle("text-white");
        switchModeBtn.classList.toggle("btn-go-down");
        editProfileRow.classList.toggle("background-go-down");
        for(let i=0;i<inputs.length;i++){
            inputs[i].classList.toggle("disappear");
            details[i].classList.toggle("disappear");
        }
        
        let switchSvg = document.getElementsByClassName("switch-svg")[0];
        switchModeBtn.classList.toggle("save-btn");
        if(switchModeBtn.classList.contains("save-btn")){
            switchSvg.setAttribute("src", "img/save.svg");
            const saveBtn = document.getElementsByClassName("save-btn")[0];
            const form  = document.getElementById("profile-form");
            saveBtn.addEventListener("click", () => {
                form.submit();
            })
        }
        else{
            switchSvg.setAttribute("src", "img/chevron-down.svg");
        }     
    });

    
</script>
